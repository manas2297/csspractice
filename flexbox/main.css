body{
  background: #a3931a;
}
.container{
  background: #333;
  color: white;
  margin: 10px 40px;
}
.form-row{
  margin: 10px 40px;
  padding: 10px 0;
  display: flex;
}

.form-row label{
  padding-right: 10px;

}
.form-row input{
  flex: 1;
}
/*Just by placing the display flex property here we make the 3 columns sit
side by side. But the mainColumn has higher width as compared to the other
colomns, due to the contents.*/
.column-layout{
  max-width: 1300px;
  background-color: #333;
  margin: 40px auto 0 auto;
  line-height: 1.65;
  padding: 20px 50px;
  display: flex;
  color: white;
}

.mainColumn{
  flex: 3;
  order: 2;
  padding: 0px 20px;
  text-align: justify;
}
.sidebar-one{
  flex: 1;
  order: 1;
  text-align: justify;
}
.sidebar-two{
  flex: 1;
  order: 3;
  text-align: justify;
}
/*Adding margins in between our columns*/

.call-out-container{
  max-width: 1400px;
  margin: 40px auto 0 auto;

}

.call-out{
  padding: 20px;
  box-sizing: border-box;
  margin-bottom: 20px;
  flex-basis: 30%;
  /*  Initialize main size of initial flex element*/
}
/* Make single layout in small screens and 3 column layout in the
large screens using this method */
@media (min-width:900px) {
  .call-out-container{
    display: flex;
    justify-content: space-between;
  }
}
.call-out:nth-child(1){background: #147;}
.call-out:nth-child(2){background: #f86;}
.call-out:nth-child(3){background: #584;}
